/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aegs;

import java.sql.*;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author HP
 */
public class Course extends javax.swing.JPanel {

    /**
     * Creates new form Instruction
     */
    Connection con;
    Statement st;
    ResultSet rs;
    ArrayList<Object []> row;
    public Course() {
        initComponents();
        initDb();
        addCourse();
    }

    private void initDb() {
        try {
            new Database();
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/AEGS", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error Connecting to the Database\nConnect the DBMS and run the application again!");
            System.exit(0);
            ex.printStackTrace();
        }
    }
    private void addCourse()
    {
        try {
            row = new ArrayList<>();
            Object [] record;
            rs = st.executeQuery("Select course_id, course_title From course");
            
            while(rs.next())
            {
                record = new Object[3];
                record[0] = rs.getString(1);
                record[1] = rs.getString(2);
                record[2] = false;
                row.add(record);
            }
            course.setModel(new MyTable(row));
        } catch (SQLException ex) {
            Logger.getLogger(Course.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        course = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Exams", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        setMaximumSize(new java.awt.Dimension(778, 503));
        setMinimumSize(new java.awt.Dimension(778, 503));
        setPreferredSize(new java.awt.Dimension(778, 503));

        course.setBackground(new java.awt.Color(153, 204, 255));
        course.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        course.setForeground(new java.awt.Color(255, 0, 0));
        course.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Course Title", "Take Exam"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        course.setFillsViewportHeight(true);
        course.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courseMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(course);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void courseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseMouseClicked
        // TODO add your handling code here:
        if(course.getSelectedRow() >= 0 && course.getSelectedColumn() == 2)
        {
            int a = JOptionPane.showConfirmDialog(course, "Are you sure u wanna take\n\t" + row.get(course.getSelectedRow())[0] + "\n" + row.get(course.getSelectedRow())[1], "Confirm Selection", JOptionPane.YES_NO_OPTION );
           if(a == JOptionPane.YES_OPTION)
           {
               Student.container.removeAll();
               Student.container.add(new Instruction((String) row.get(course.getSelectedRow())[0]));
               Student.container.repaint();
               Student.container.revalidate();
           }
        }
    }//GEN-LAST:event_courseMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable course;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private static class MyTable extends AbstractTableModel {

        ArrayList<Object []> row;
        Object [] col = new Object[]{"Course Code", "Course Title", "Take Exam"};
        Class[] types = new Class [] {java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class};

        private MyTable(ArrayList<Object []> row) {
            this.row = row;
        }
        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        public String getColumnName(int col) {
            return (String) this.col[col];
        }

        public int getRowCount() {
            return row.size();
        }

        public int getColumnCount() {
            return col.length;
        }

        public Object getValueAt(int row, int col) {
            return this.row.get(row)[col];
        }

        public void setValueAt(Object value, int row, int col) {
            this.row.get(row)[col] = value;
            fireTableCellUpdated(row, col);
        }

    }

}
