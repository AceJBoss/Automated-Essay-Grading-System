/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aegs;

import java.awt.Color;
import java.awt.Image;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;

/**
 *
 * @author HP
 */
public class Examinar extends javax.swing.JPanel {

    /**
     * Creates new form Examinar
     */
    public Examinar() {
        initComponents();
        Image im = getToolkit().createImage(getClass().getResource("images/display.png"));
        im = im.getScaledInstance(1100, 500, Image.SCALE_SMOOTH);
        dp.setIcon(new ImageIcon(im));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        student = new javax.swing.JLabel();
        course = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        result = new javax.swing.JLabel();
        container = new javax.swing.JPanel();
        dp = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 255));
        setMaximumSize(new java.awt.Dimension(1100, 530));
        setMinimumSize(new java.awt.Dimension(1100, 530));

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1100, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(1100, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 30));

        student.setBackground(new java.awt.Color(255, 0, 0));
        student.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        student.setText("Add Student");
        student.setOpaque(true);
        student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseExited(evt);
            }
        });

        course.setBackground(new java.awt.Color(255, 0, 0));
        course.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        course.setText("Course");
        course.setOpaque(true);
        course.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseExited(evt);
            }
        });

        logout.setBackground(new java.awt.Color(255, 0, 0));
        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setText("Logout");
        logout.setOpaque(true);
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseExited(evt);
            }
        });

        result.setBackground(new java.awt.Color(255, 0, 0));
        result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        result.setText("View Result");
        result.setOpaque(true);
        result.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Examinar.this.mouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(521, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(result, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(student, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(course, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );

        container.setBackground(new java.awt.Color(255, 255, 255));
        container.setMaximumSize(new java.awt.Dimension(1100, 500));
        container.setMinimumSize(new java.awt.Dimension(1100, 500));
        container.setPreferredSize(new java.awt.Dimension(1100, 500));
        container.setLayout(new java.awt.BorderLayout());
        container.add(dp, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClicked
        // TODO add your handling code here:
        if(evt.getSource() == course)
        {
            container.removeAll();
            container.add(new ExaminarCourse());
            container.repaint();
            container.revalidate();
        }else if(evt.getSource() == student)
        {
            container.removeAll();
            container.add(new AddStudent());
            container.repaint();
            container.revalidate();
        }else if(evt.getSource() == result)
        {
            container.removeAll();
            container.add(new ExaminarResult());
            container.repaint();
            container.revalidate();
        }else if(evt.getSource() == logout)
        {
            Frame.container.removeAll();
            Frame.container.add(new Login());
            Frame.container.repaint();
            Frame.container.revalidate();
        }
    }//GEN-LAST:event_mouseClicked

    private void mouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEntered
        // TODO add your handling code here:
        if(evt.getSource() == course)
        {
            course.setBorder(BorderFactory.createLineBorder(Color.WHITE, 1, true));
        }else if(evt.getSource() == student)
        {
            student.setBorder(BorderFactory.createLineBorder(Color.WHITE, 1, true));
        }else if(evt.getSource() == result)
        {
            result.setBorder(BorderFactory.createLineBorder(Color.WHITE, 1, true));
        }else if(evt.getSource() == logout)
        {
            logout.setBorder(BorderFactory.createLineBorder(Color.WHITE, 1, true));
        }
    }//GEN-LAST:event_mouseEntered

    private void mouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExited
        // TODO add your handling code here:
        if(evt.getSource() == course)
        {
            course.setBorder(null);
        }else if(evt.getSource() == student)
        {
            student.setBorder(null);
        }else if(evt.getSource() == result)
        {
            result.setBorder(null);
        }else if(evt.getSource() == logout)
        {
            logout.setBorder(null);
        }
    }//GEN-LAST:event_mouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel container;
    private javax.swing.JLabel course;
    private javax.swing.JLabel dp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel result;
    private javax.swing.JLabel student;
    // End of variables declaration//GEN-END:variables
}
