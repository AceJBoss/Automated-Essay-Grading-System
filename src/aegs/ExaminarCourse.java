/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aegs;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author HP
 */
public class ExaminarCourse extends javax.swing.JPanel {

    /**
     * Creates new form ExaminarCourse
     */
    Connection con;
    Statement st;
    ResultSet rs;
    ArrayList<Object []> row;
    
    public ExaminarCourse() {
        initComponents();
        initDb();
        addResult();
    }
    private void addResult()
    {
        try {
            row = new ArrayList<>();
            Object [] record;
            rs = st.executeQuery("Select course_id, course_title From course");
            
            while(rs.next())
            {
                record = new Object[2];
                record[0] = rs.getString(1);
                record[1] = rs.getString(2);
                row.add(record);
            }
            registered_course.setModel(new MyTable(row));
        } catch (SQLException ex) {
            Logger.getLogger(Course.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initDb() {
        try {
            new Database();
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/AEGS", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error Connecting to the Database\nConnect the DBMS and run the application again!");
            System.exit(0);
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        new_course = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        registered_course = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 255));
        setMaximumSize(new java.awt.Dimension(1100, 500));
        setMinimumSize(new java.awt.Dimension(1100, 500));
        setPreferredSize(new java.awt.Dimension(1100, 500));

        container.setMaximumSize(new java.awt.Dimension(770, 530));
        container.setPreferredSize(new java.awt.Dimension(770, 530));
        container.setLayout(new java.awt.BorderLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aegs/images/display.png"))); // NOI18N
        container.add(jLabel1, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registered Courses", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(330, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(330, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(330, 500));

        new_course.setText("Register New Course");
        new_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_courseActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(153, 204, 255));

        registered_course.setBackground(new java.awt.Color(153, 204, 255));
        registered_course.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        registered_course.setForeground(new java.awt.Color(255, 0, 0));
        registered_course.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Course Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        registered_course.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(registered_course);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(new_course, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(new_course)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void new_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_courseActionPerformed
        // TODO add your handling code here:
        container.removeAll();
        container.add(new AddCourse());
        container.repaint();
        container.revalidate();
    }//GEN-LAST:event_new_courseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton new_course;
    private javax.swing.JTable registered_course;
    // End of variables declaration//GEN-END:variables

     private static class MyTable extends AbstractTableModel {

        ArrayList<Object []> row;
        Object [] col = new Object[]{"Course Code", "Course Title"};
        Class[] types = new Class [] {java.lang.Object.class, java.lang.Object.class};

        private MyTable(ArrayList<Object []> row) {
            this.row = row;
        }
        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        public String getColumnName(int col) {
            return (String) this.col[col];
        }

        public int getRowCount() {
            return row.size();
        }

        public int getColumnCount() {
            return col.length;
        }

        public Object getValueAt(int row, int col) {
            return this.row.get(row)[col];
        }

        public void setValueAt(Object value, int row, int col) {
            this.row.get(row)[col] = value;
            fireTableCellUpdated(row, col);
        }

    }
}
